% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
k =(0:9.0703e-005:5);
w=500*pi;
h=w.*k;
x = sin(h);
f=get(handles.slider1,'Value');
y = awgn(x,f,'measured');
D=crosscorr(x,y);
z=-20:1:20;
plot(handles.axes1,k,x)
plot(handles.axes2,k,y)
plot(handles.axes3,z,D)
For programming, push button 2, called de-noise sine, this button performs all the
processing method, which was described previously. It is necessary to write all this code
% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
menu= get(handles.popupmenu1,'Value');
switch menu
case 1 %case 1: coiflet 5
·% example3 code
k =(0:9.0703e-005:5);
w=500*pi;
h=w.*k;
x = sin(h);
f=get(handles.slider1,'Value');
y = awgn(x,f,'measured');
wname = 'coif5'; lev = 10; % wavelet that need to change!
tree = wpdec(y,lev,wname);
det1 = wpcoef(tree,2);
sigma = median(abs(det1))/0.6745;
alpha = 2;
thr =wpbmpen(tree,sigma,alpha);
keepapp = 1;
xd = wpdencmp(tree,'s','nobest',thr,keepapp);
D=crosscorr(x,xd);
z=-20:1:20;
plot(handles.axes1,k,x)
plot(handles.axes2,k,y)
plot(handles.axes3,k,xd)
set(gca,'XLim',[ 0.2, 0.24], ...
'YLim',[-1 1]);
plot(handles.axes4,z,D)
case 2 %case2 Daubechies 10
·% example3 code
case 3 %Case 3: Daubechies 9
·% example3 code
End
